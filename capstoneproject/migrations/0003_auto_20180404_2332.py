# Generated by Django 2.0.3 on 2018-04-04 23:32

import capstoneproject.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('capstoneproject', '0002_auto_20180331_1743'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', capstoneproject.models.RatingField()),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=125)),
                ('creator', models.CharField(max_length=70)),
                ('media', models.PositiveSmallIntegerField(choices=[(0, 'song'), (1, 'movie'), (2, 'book'), (3, 'website'), (4, 'document')])),
            ],
            options={
                'default_manager_name': 'content',
            },
            managers=[
                ('content', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', capstoneproject.models.RatingField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('category_ratings', models.ManyToManyField(related_name='ratings', to='capstoneproject.CategoryRating')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='capstoneproject.Content')),
            ],
            options={
                'default_manager_name': 'ratings',
            },
            managers=[
                ('ratings', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserStorage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'default_manager_name': 'user_storage',
            },
            managers=[
                ('user_storage', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='WordCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', capstoneproject.models.WordCountField(default=1)),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='user',
            field=models.ManyToManyField(related_name='categories', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='word',
            name='user',
            field=models.ManyToManyField(related_name='words', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='wordfeature',
            name='user',
            field=models.ManyToManyField(related_name='word_features', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='category',
            name='weight',
            field=models.PositiveSmallIntegerField(choices=[(0, 'innocuous'), (1, 'slight'), (2, 'moderate'), (3, 'heavy')]),
        ),
        migrations.AlterField(
            model_name='wordfeature',
            name='weight',
            field=models.PositiveSmallIntegerField(choices=[(0, 'innocuous'), (1, 'slight'), (2, 'moderate'), (3, 'heavy')]),
        ),
        migrations.AddField(
            model_name='wordcount',
            name='word',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='capstoneproject.Word'),
        ),
        migrations.AddField(
            model_name='userstorage',
            name='categories',
            field=models.ManyToManyField(related_name='user_storage', to='capstoneproject.Category'),
        ),
        migrations.AddField(
            model_name='userstorage',
            name='ratings',
            field=models.ManyToManyField(related_name='user_storage', to='capstoneproject.Rating'),
        ),
        migrations.AddField(
            model_name='userstorage',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userstorage',
            name='word_features',
            field=models.ManyToManyField(related_name='user_storage', to='capstoneproject.WordFeature'),
        ),
        migrations.AddField(
            model_name='rating',
            name='word_counts',
            field=models.ManyToManyField(related_name='ratings', to='capstoneproject.WordCount'),
        ),
        migrations.AddField(
            model_name='categoryrating',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='capstoneproject.Category'),
        ),
        migrations.AddField(
            model_name='categoryrating',
            name='user',
            field=models.ManyToManyField(related_name='category_ratings', to=settings.AUTH_USER_MODEL),
        ),
    ]
