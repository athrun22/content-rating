# Generated by Django 2.0.3 on 2018-04-06 18:27

import capstoneproject.models.fields.rating_field
import capstoneproject.models.fields.strength_field
import capstoneproject.models.fields.weight_field
import capstoneproject.models.fields.word_count_field
import capstoneproject.models.models.user_storage
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('weight', capstoneproject.models.fields.weight_field.WeightField(choices=[(0, 'innocuous'), (1, 'slight'), (2, 'moderate'), (3, 'heavy')])),
            ],
            options={
                'default_manager_name': 'categories',
            },
            managers=[
                ('categories', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CategoryRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', capstoneproject.models.fields.rating_field.RatingField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='capstoneproject.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=125)),
                ('creator', models.CharField(max_length=70)),
                ('media', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'song'), (1, 'movie'), (2, 'book'), (3, 'website'), (4, 'document')], null=True)),
            ],
            options={
                'default_manager_name': 'content',
            },
            managers=[
                ('content', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ContentRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', capstoneproject.models.fields.rating_field.RatingField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('category_ratings', models.ManyToManyField(related_name='content_ratings', to='capstoneproject.CategoryRating')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='capstoneproject.Content')),
            ],
            options={
                'default_manager_name': 'content_ratings',
            },
            managers=[
                ('content_ratings', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserStorage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categories', models.ManyToManyField(blank=True, default=capstoneproject.models.models.user_storage.UserStorage.default_categories, related_name='user_storage', to='capstoneproject.Category')),
                ('ratings', models.ManyToManyField(blank=True, related_name='user_storage', to='capstoneproject.ContentRating')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_manager_name': 'user_storage',
            },
            managers=[
                ('user_storage', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'default_manager_name': 'words',
            },
            managers=[
                ('words', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='WordCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', capstoneproject.models.fields.word_count_field.WordCountField(default=1)),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='capstoneproject.Word')),
            ],
        ),
        migrations.CreateModel(
            name='WordFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default', models.BooleanField(default=False)),
                ('strength', capstoneproject.models.fields.strength_field.StrengthField(choices=[(True, 'strong'), (False, 'weak')], default='strong')),
                ('weight', capstoneproject.models.fields.weight_field.WeightField(choices=[(0, 'innocuous'), (1, 'slight'), (2, 'moderate'), (3, 'heavy')])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='capstoneproject.Category')),
            ],
            options={
                'default_manager_name': 'word_features',
            },
            managers=[
                ('word_features', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='word',
            name='word_features',
            field=models.ManyToManyField(related_name='words', to='capstoneproject.WordFeature'),
        ),
        migrations.AddField(
            model_name='userstorage',
            name='word_features',
            field=models.ManyToManyField(blank=True, default=capstoneproject.models.models.user_storage.UserStorage.default_word_features, related_name='user_storage', to='capstoneproject.WordFeature'),
        ),
        migrations.AddField(
            model_name='userstorage',
            name='words',
            field=models.ManyToManyField(blank=True, default=capstoneproject.models.models.user_storage.UserStorage.default_words, related_name='user_storage', to='capstoneproject.Word'),
        ),
        migrations.AddField(
            model_name='contentrating',
            name='word_counts',
            field=models.ManyToManyField(related_name='content_ratings', to='capstoneproject.WordCount'),
        ),
    ]
